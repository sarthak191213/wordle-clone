*, *::after, *::before {
  box-sizing: border-box;
  font-family: Arial;
}

body {
  background-color: hsl(240, 3%, 7%);
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  margin: 0;
  padding: 1em;
  font-size: clamp(.5rem, 2.5vmin, 1.5rem);
/*font-size vary acc to size of the viewport */}

.keyboard {
  display: grid;
  grid-template-columns: repeat(20, minmax(auto, 1.25em));/*create evry elemwnt as 2 taking 2 columns thats why 20 since every row has 10 elements ,this is done becz space has 1 col*/
  grid-auto-rows: 3em;/*height of every row*/
  gap: .25em;
  justify-content: center;
}

.key {
  font-size: inherit;
  grid-column: span 2;
  border: none;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: hsl(
    var(--hue, 200),
    var(--saturation, 1%),
    calc(var(--lightness-offset, 0%) + var(--lightness, 51%))
  );
  color: white;
  fill: white;/*for the svg element*/
  text-transform: uppercase;
  border-radius: .25em;
  cursor: pointer;
  user-select: none;
}

.key.large {
  grid-column: span 3;
}

.key > svg {
  width: 1.75em;
  height: 1.75em;
}

.key:hover, .key:focus {
  --lightness-offset: 10%;
  /*10% lighter on hovering */
}

.key.wrong {
  --lightness: 23%;
}

.key.wrong-location {

  --hue: 49;
  --saturation: 51%;
  --lightness: 47%;
  /*for wrong location*/
}

.key.correct {
  --hue: 115;
  --saturation: 29%;
  --lightness: 43%;

}

.guess-grid {
  display: grid;
  justify-content: center;
  align-content: center;
  flex-grow: 1;/*sets the grid above keyboard as well has same size with flex direction column
  */
  grid-template-columns: repeat(5, 4em);
  /*5 column of 4em size*/
  grid-template-rows: repeat(6, 4em);
  /*6 row with 4 em size*/
  gap: .25em;
  margin-bottom: 1em;
}

.tile {
  font-size: 2em;/*settig size of tile*/
  color: white;
  border: .05em solid hsl(240, 2%, 23%);
  text-transform: uppercase;
  font-weight: bold;
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;/*specifies whether the text of an element can be selected. */
  transition: transform 250ms linear;
}

.tile[data-state="active"] {
  border-color: hsl(200, 1%, 34%);
}

.tile[data-state="wrong"] {
  border: none;
  background-color: hsl(240, 2%, 23%);
}

.tile[data-state="wrong-location"] {
  border: none;
  background-color: hsl(49, 51%, 47%);
}

.tile[data-state="correct"] {
  border: none;
  background-color: hsl(115, 29%, 43%);
}

.tile.shake {
  animation: shake 250ms ease-in-out;
}

.tile.dance {
  animation: dance 500ms ease-in-out;
}

.tile.flip {
  transform: rotateX(90deg);
}
/*nice shake here on each percentage of animation at 100% animation being complete back to original pos*/
@keyframes shake {
  10% {
    transform: translateX(-5%);
  }/*to left by 5%*/

  30% {
    transform: translateX(5%);
  }

  50% {
    transform: translateX(-7.5%);
  }

  70% {
    transform: translateX(7.5%);
  }

  90% {
    transform: translateX(-5%);
  }

  100% {
    transform: translateX(0);
  }
}

@keyframes dance {
  20% {
    transform: translateY(-50%);
  }  

  40% {
    transform: translateY(5%);
  }  

  60% {
    transform: translateY(-25%);
  }  

  80% {
    transform: translateY(2.5%);
  }  

  90% {
    transform: translateY(-5%);
  }  

  100% {
    transform: translateY(0);
  }
}

.alert-container {
  position: fixed;
  top: 10vh;
  left: 50vw;
  transform: translateX(-50%);
  z-index: 1;/*always on top*/
  display: flex;
  flex-direction: column;
  align-items: center;
}

.alert {
  pointer-events: none;
  background-color: hsl(204, 7%, 85%);
  padding: .75em;
  border-radius: .25em;
  opacity: 1;
  transition: opacity 500ms ease-in-out;
  /*fade out slowly*/
  margin-bottom: .5em;
}

.alert:last-child {
  margin-bottom: 0;
}

.alert.hide {
  opacity: 0;
}